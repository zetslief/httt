// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using gen;

#nullable disable

namespace Database.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250505175145_TopicRemoveUniqueIndex")]
    partial class TopicRemoveUniqueIndex
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("gen.Article", b =>
                {
                    b.Property<Guid>("ArticleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TopicId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ViewCount")
                        .HasColumnType("INTEGER");

                    b.HasKey("ArticleId");

                    b.HasIndex("TopicId");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("gen.Request", b =>
                {
                    b.Property<Guid>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CallerIP")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RawHeadersString")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("RequestedOn")
                        .HasColumnType("TEXT");

                    b.Property<int>("ResponseStatusCode")
                        .HasColumnType("INTEGER");

                    b.HasKey("RequestId");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("gen.Section", b =>
                {
                    b.Property<int>("SectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("ArticleId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("SectionId");

                    b.HasIndex("ArticleId");

                    b.ToTable("Sections");
                });

            modelBuilder.Entity("gen.Topic", b =>
                {
                    b.Property<int>("TopicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("TEXT");

                    b.Property<int>("SourceTopicSourceId")
                        .HasColumnType("INTEGER");

                    b.HasKey("TopicId");

                    b.HasIndex("SourceTopicSourceId");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("gen.TopicSource", b =>
                {
                    b.Property<int>("TopicSourceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10240)
                        .HasColumnType("TEXT");

                    b.HasKey("TopicSourceId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("TopicSources");
                });

            modelBuilder.Entity("gen.Article", b =>
                {
                    b.HasOne("gen.Topic", "Topic")
                        .WithMany()
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("gen.Section", b =>
                {
                    b.HasOne("gen.Article", "Article")
                        .WithMany("Sections")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");
                });

            modelBuilder.Entity("gen.Topic", b =>
                {
                    b.HasOne("gen.TopicSource", "Source")
                        .WithMany()
                        .HasForeignKey("SourceTopicSourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Source");
                });

            modelBuilder.Entity("gen.Article", b =>
                {
                    b.Navigation("Sections");
                });
#pragma warning restore 612, 618
        }
    }
}
